---

# - name: create influxdb configuration
#   template:
#     src: "influxdb.conf.j2"
#     dest: "{{ influxdb_config_dir }}/influxdb.conf"
#     owner: "root"
#     group: "root"
#     mode: "0644"
#   notify:
#     - restart service

- name: ensure influxdb is up and running
  influx_ping:
    host: "http://127.0.0.1:8086"
  retries: 10
  delay: 5
  register: _ping
  until: _ping.rc == 0
  changed_when: false

- name: set influxdb default user, organization, and bucket
  influx_setup:
    host: "http://127.0.0.1:8086"
    org: "{{ influxdb_primary.org }}"
    bucket: "{{ influxdb_primary.bucket }}"
    username: "{{ influxdb_primary.username }}"
    password: "{{ influxdb_primary.password }}"
    # token: "{{ influxdb_admin.token }}"
    force: true
  register: _setup
  failed_when:
    - _setup.rc != 0
    - '"has already been set up" not in _setup.stderr'

- name: ensure organizations exists
  influx_organizations:
    host: "http://127.0.0.1:8086"
    organizations: "{{ influxdb_orgs }}"
  register: _org
  failed_when:
    - _org.rc != 0

- name: ensure admin keys exists for organization admin users
  influx_auth:
    host: "http://127.0.0.1:8086"
    authentications: "{{ influxdb_users }}"
#     state: create
#     user: "{{ item.name }}"
#     description: "{{ item.name }} admin token for {{ item.org }}"
#     org: "{{ item.org }}"
#     all-access: true
#   loop: "{{ influxdb_users }}"
#   loop_control:
#     label: "{{ item.name }}"
  register: _auth
#  when:
#    - item.org_admin | default(False) | bool

#   # register: _admin_token
#   # failed_when:
#   #   - _admin_token.rc != 0
#   #   - '"already exists" not in _admin_token.stderr'
#   # changed_when: _admin_token.rc == 0
#   # become: true

# - name: d
#   debug:
#     msg: "{{ _auth }}"

- name: ensure users exist
  influx_users:
    host: "http://127.0.0.1:8086"
    users: "{{ influxdb_users }}"
#     --host "{{ influxdb_host }}" \
#     --name "{{ item.name }}" \
#     --org "{{ item.org }}" \
#     --password "{{ item.password }}"
#   loop: "{{ influxdb_users }}"
#   loop_control:
#     label: "{{ item.name }}"
  register: _user
  failed_when:
    - _user.rc != 0
    # - '"already exists" not in _user.stderr'
  # changed_when: _user.rc == 0

- name: ensure buckets exist
  influx_buckets:
    host: "http://127.0.0.1:8086"
    buckets: "{{ influxdb_buckets }}"
#     create \
#     --host "{{ influxdb_host }}" \
#     --name "{{ item.name }}" \
#     --description "{{ item.description | d('') }}" \
#     --org "{{ item.org }}" \
#     --retention "{{ item.retention | d(0) }}"
#   loop: "{{ influxdb_buckets }}"
#   loop_control:
#     label: "{{ item.name }}"
  register: _bucket
  failed_when:
    - _bucket.rc != 0
#     - '"already exists" not in _bucket.stderr'
#   changed_when: _bucket.rc == 0

...
