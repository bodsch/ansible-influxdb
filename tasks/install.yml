---

- name: user and group handling
  when:
    - influxdb_system_user != "root"
  block:
    - name: create influxdb group
      ansible.builtin.group:
        name: "{{ influxdb_system_group }}"
        state: present
        system: true

    - name: create influxdb user
      ansible.builtin.user:
        name: "{{ influxdb_system_user }}"
        groups: "{{ influxdb_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: "{{ influxdb_storage_dir }}"

- name: create install directory
  ansible.builtin.file:
    path: "{{ influxdb_install_path }}"
    state: directory
    owner: "{{ influxdb_system_user }}"
    group: "{{ influxdb_system_group }}"
    mode: 0755

- name: detect extracted binary file for influxdb on '{{ influxdb_delegate_to }}'
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influxd }}"
  register: stat_influxdb_file_binary

- name: detect extracted binary file for influx-client on '{{ influxdb_delegate_to }}'
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influx }}"
  register: stat_influx_client_file_binary

- name: fail when extracted binaries are missing
  ansible.builtin.fail:
    msg: "missing extracted binaries on ansible controller"
  when:
    - not stat_influxdb_file_binary.stat.exists or
      not stat_influx_client_file_binary.stat.exists

- name: detect installed influxdb binary
  ansible.builtin.stat:
    path: "{{ influxdb_install_path }}/influxd"
  register: stat_influxdb_binary

- name: detect installed influx-client binary
  ansible.builtin.stat:
    path: "{{ influxdb_install_path }}/influx"
  register: stat_influx_client_binary

- name: detect activated influxdb binary
  ansible.builtin.stat:
    path: /usr/bin/influxdb
  register: stat_influxdb_activated

- name: detect activated influx-client binary
  ansible.builtin.stat:
    path: /usr/bin/influx
  register: stat_influx_client_activated

- name: install and activate influx
  when:
    - (stat_influxdb_binary.stat is defined and not stat_influxdb_binary.stat.exists | default('false')) or
      not stat_influxdb_activated.stat | bodsch.core.linked_version(influxdb_install_path, influxdb_version) or
      (stat_influx_client_binary.stat is defined and not stat_influx_client_binary.stat.exists | default('false')) or
      not stat_influx_client_activated.stat | bodsch.core.linked_version(influxdb_install_path, influxdb_version)
  block:
    - name: propagate influxd binary
      ansible.builtin.copy:
        src: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influxd }}"
        dest: "{{ influxdb_install_path }}/influxd"
        mode: 0755
        owner: "{{ influxdb_system_user }}"
        group: "{{ influxdb_system_group }}"
        remote_src: "{{ 'true' if influxdb_direct_download else 'false' }}"

    - name: make sure influxd is executable
      ansible.builtin.file:
        path: "{{ influxdb_install_path }}/influxd"
        mode: 0755
        owner: "{{ influxdb_system_user }}"
        group: "{{ influxdb_system_group }}"

    - name: create link to influxd binary
      ansible.builtin.file:
        src: "{{ influxdb_install_path }}/influxd"
        dest: /usr/bin/influxd
        state: link
        force: true
      notify:
        - restart service

    - name: propagate influx binary
      ansible.builtin.copy:
        src: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influx }}"
        dest: "{{ influxdb_install_path }}/influx"
        mode: 0755
        owner: "{{ influxdb_system_user }}"
        group: "{{ influxdb_system_group }}"
        remote_src: "{{ 'true' if influxdb_direct_download else 'false' }}"

    - name: make sure influx is executable
      ansible.builtin.file:
        path: "{{ influxdb_install_path }}/influx"
        mode: 0755
        owner: "{{ influxdb_system_user }}"
        group: "{{ influxdb_system_group }}"

    - name: create link to influx binary
      ansible.builtin.file:
        src: "{{ influxdb_install_path }}/influx"
        dest: /usr/bin/influx
        state: link
        force: true

  rescue:
    - name: delete install directory
      ansible.builtin.file:
        path: "{{ influxdb_install_path }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred during the installation of the binary.

- name: create influxdb data directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ influxdb_system_user }}"
    group: "{{ influxdb_system_group }}"
    mode: 0755
  loop:
    - "{{ influxdb_storage_dir }}"
    - "{{ influxdb_storage_dir }}/meta"
    - "{{ influxdb_storage_dir }}/data"
    - "{{ influxdb_storage_dir }}/wal"

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:

    - name: create influxdb run configuration
      ansible.builtin.template:
        src: "default/influxdb.j2"
        dest: "{{ influxdb_defaults_directory }}/influxdb"
        force: true
        owner: root
        group: "{{ influxdb_system_group }}"
        mode: 0640
      notify:
        # - validate config
        - restart service

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/influxdb.service.j2"
        dest: "{{ systemd_lib_directory }}/influxdb.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - systemd daemon reload
        - restart service

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/influxdb.j2"
        dest: "/etc/conf.d/influxdb"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/influxdb.j2"
        dest: "/etc/init.d/influxdb"
        owner: root
        group: root
        mode: 0750

- name: create custom fact file
  bodsch.core.facts:
    name: influxdb
    facts:
      version: "{{ influxdb_version }}"

...
