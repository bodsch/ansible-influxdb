---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: assert wrong influxdb version ({{ influxdb_version }})
  assert:
    that:
      - influxdb_main_version | int == 2
    msg:
      - this role handle only influxdb2
      - for influxdb1 support, please use  mkayontour.ansible-influxdb
    quiet: true

- name: update package cache
  package:
    update_cache: true

- name: define delegate instance for download handling
  set_fact:
    influxdb_delegate_to: "{{ ansible_host }}"
    influxdb_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/influxdb', true) }}/{{ influxdb_version }}"
  when:
    - influxdb_direct_download

- name: install dependency
  package:
    name: "{{ influxdb_requirements }}"
    state: present
  when:
    - influxdb_requirements | default([]) | count > 0

- block:
    - name: get latest release
      uri:
        url: "https://api.github.com/repos/influxdata/influxdb/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      # no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: set influxdb version to {{ _latest_release.json.tag_name[1:] }}
      set_fact:
        influxdb_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - influxdb_version == "latest"

- name: detect our installation path '{{ influxdb_install_path | dirname }}'
  stat:
    path: "{{ influxdb_install_path | dirname }}"
    get_checksum: false
  register: stat_influxdb_path
  ignore_errors: true

- name: old installation
  block:
    - name: stop old service
      service:
        name: influxdb
        state: stopped
        enabled: false
      notify:
        - systemd daemon reload

    - name: remove installed systemd unit
      file:
        state: absent
        path: /etc/systemd/system/influxdb.service
      when:
        - ansible_service_mgr | lower == "systemd"

    - name: remove installed influxdb
      file:
        state: absent
        path: "{{ stat_influxdb_path.stat.path }}"
  when:
    - stat_influxdb_path is defined
    - stat_influxdb_path.stat is defined
    - stat_influxdb_path.stat.isdir is defined
    - not stat_influxdb_path.stat.isdir

- name: flush handlers
  meta: flush_handlers

- name: detect installed influxdb binary
  stat:
    path: "{{ influxdb_install_path }}/influxd"
  register: stat_influxdb_binary

- name: detect installed influx client binary
  stat:
    path: "{{ influxdb_install_path }}/influx"
  register: stat_influx_client_binary

- name: create download directory
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  file:
    path: "{{ influxdb_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  block:
    - name: create influxdb group
      group:
        name: "{{ influxdb_system_group }}"
        state: present
        system: true

    - name: create influxdb user
      user:
        name: "{{ influxdb_system_user }}"
        groups: "{{ influxdb_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: "{{ influxdb_storage_dir }}"
  when:
    - influxdb_system_user != "root"

- name: create install directory
  file:
    path: "{{ influxdb_install_path }}"
    state: directory
    owner: "{{ influxdb_system_user }}"
    group: "{{ influxdb_system_group }}"
    mode: 0755

- name: fix directory rights for {{ influxdb_install_path | dirname }}
  file:
    path: "{{ influxdb_install_path | dirname }}"
    state: directory
    owner: "{{ influxdb_system_user }}"
    group: "{{ influxdb_system_group }}"
    mode: 0755
    recurse: true

- name: create ansible local facts directory
  file:
    dest: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: 0775

- name: merge influxdb configuration between defaults and custom
  set_fact:
    influxdb_service: "{{ influxdb_defaults_service | combine( influxdb_service, recursive=True ) }}"
    influxdb_admin: "{{ influxdb_defaults_admin | combine( influxdb_admin, recursive=True ) }}"
    influxdb_primary: "{{ influxdb_defaults_primary | combine( influxdb_primary, recursive=True ) }}"
    # influxdb_config_global: "{{ influxdb_defaults_config_global | combine( influxdb_config_global, recursive=True ) }}"
    # influxdb_config_graphite: "{{ influxdb_defaults_config_graphite | combine( influxdb_config_graphite, recursive=True ) }}"
    # influxdb_config_collectd: "{{ influxdb_defaults_config_collectd | combine( influxdb_config_collectd, recursive=True ) }}"
    # influxdb_config_udp: "{{ influxdb_defaults_config_udp | combine( influxdb_config_udp, recursive=True ) }}"
    # influxdb_config_meta: "{{ influxdb_defaults_config_meta | combine( influxdb_config_meta, recursive=True ) }}"
    # influxdb_config_http: "{{ influxdb_defaults_config_http | combine( influxdb_config_http, recursive=True ) }}"
    # influxdb_config_data: "{{ influxdb_defaults_config_data | combine( influxdb_config_data, recursive=True ) }}"
    influxdb_exists: "{{ stat_influxdb_binary.stat.exists }}"
    influxdb_client_exists: "{{ stat_influx_client_binary.stat.exists }}"



...
