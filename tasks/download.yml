---

- name: get latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - influxdb_version == "latest"
  block:
    - name: get latest release
      delegate_to: localhost
      become: false
      run_once: true
      bodsch.scm.github_latest:
        project: influxdata
        repository: influxdb
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
        github_tags: "{{ influxdb_scm.use_tags | default('false') }}"
        without_beta: "{{ influxdb_scm.without_beta | default('false') }}"
        filter_elements: "{{ influxdb_scm.version_filter | default([]) }}"
      register: _latest_release

    - name: re-define influxdb_version
      ansible.builtin.set_fact:
        influxdb_version: "{{ _latest_release.latest_release }}"
        # influxdb_download_url: "https://api.github.com/repos/influxdata/influxdb/tarball/v{{ _latest_release.latest_release }}"

# - name: define download information
#   ansible.builtin.set_fact:
#     influxdb_release: "{{ influxdb_defaults_release | combine(influxdb_release, recursive=True) | influxdb_release_filename(influxdb_version) }}"

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    influxdb_delegate_to: "{{ ansible_host }}"
    influxdb_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/influxdb', true) }}/{{ influxdb_version }}"
  when:
    - influxdb_direct_download

- name: merge influxdb configuration between defaults and custom
  ansible.builtin.set_fact:
    influxdb_release: "{{ influxdb_defaults_release | combine(influxdb_release, recursive=True) }}"

- name: fix release filename for influxdb archive
  #when:
  #  - influxdb_version is version_compare('2.7.1', '>' )
  ansible.builtin.set_fact:
    influxdb_release: "{{ influxdb_release | influxdb_fix_release(influxdb_version, version='2.7.1') }}"

- name: define influxdb_download_url
  ansible.builtin.set_fact:
    influxdb_download_url: "{{ influxdb_release.download_url }}/{{ influxdb_release.files.influxdb }}"

- name: define influxdb_client_download_url
  ansible.builtin.set_fact:
    influxdb_client_download_url: "{{ influxdb_release.download_url }}/{{ influxdb_release.files.influx_client }}"

- name: d
  debug:
    msg:
      - "{{ influxdb_download_url }}"
      - "{{ influxdb_client_download_url }}"
      - "{{ influxdb_release }}"

- name: create download directory
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.file:
    path: "{{ influxdb_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: detect the downloaded influxdb archive
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.files.influxdb }}"
  register: stat_influxdb_archive

- name: detect the downloaded influx client archive
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.files.influx_client }}"
  register: stat_influx_client_archive

- name: download
  when:
    - (stat_influxdb_archive.stat is defined and not stat_influxdb_archive.stat.exists | default('false')) or
      (stat_influx_client_archive.stat is defined and not stat_influx_client_archive.stat.exists | default('false'))
  block:
    - name: download influxdb archiv {{ influxdb_release.files.influxdb }}
      become: false
      delegate_to: "{{ influxdb_delegate_to }}"
      run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ influxdb_download_url }}"
        dest: "{{ influxdb_local_tmp_directory }}/"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 10
      delay: 5
      check_mode: false

    - name: download influx-client archiv {{ influxdb_release.files.influx_client }}
      become: false
      delegate_to: "{{ influxdb_delegate_to }}"
      run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ influxdb_client_download_url }}"
        dest: "{{ influxdb_local_tmp_directory }}/"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 10
      delay: 5
      check_mode: false

  rescue:
    - name: delete download directory
      become: false
      delegate_to: "{{ influxdb_delegate_to }}"
      run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
      ansible.builtin.file:
        path: "{{ influxdb_local_tmp_directory }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred when downloading the archive.

- name: detect extracted influxdb
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influxd }}"
  register: stat_influxdb_binary

- name: extract influxdb archiv
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.unarchive:
    src: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.files.influxdb }}"
    dest: "{{ influxdb_local_tmp_directory }}/"
    copy: false
    extra_opts:
      - --strip-components=1
  when:
    - stat_influxdb_binary.stat is defined
    - not stat_influxdb_binary.stat.exists | default('false')

- name: detect extracted influx-client
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.binaries.influx }}"
  register: stat_influx_client_binary

- name: extract influx-client archiv
  become: false
  delegate_to: "{{ influxdb_delegate_to }}"
  run_once: "{{ 'false' if influxdb_direct_download else 'true' }}"
  ansible.builtin.unarchive:
    src: "{{ influxdb_local_tmp_directory }}/{{ influxdb_release.files.influx_client }}"
    dest: "{{ influxdb_local_tmp_directory }}/"
    copy: false
    extra_opts:
      - --strip-components=1
  when:
    - stat_influx_client_binary.stat is defined
    - not stat_influx_client_binary.stat.exists | default('false')

...
